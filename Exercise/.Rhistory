total <- list()
# URL 요청 및 응답 저장
for(i in 1:length(urlList)) {
rawData[[i]] <- xmlTreeParse(urlList[i], useInternalNodes = TRUE, encoding = 'utf-8')
rootNode[[i]] <- xmlRoot(rawData[[i]])
# 전체 거래 건수 확인
items <- rootNode[[i]][[2]][['items']]
size <- xmlSize(items)
# 거래 내역 추출
item <- list()
itemTempDt <- data.table()
Sys.sleep(0.1)
for (m in 1:size){
itemTemp <- xmlSApply(items[[m]], xmlValue)
itemTempDt <- data.table(year = itemTemp[4],
month = itemTemp[7],
day = itemTemp[8],
price = itemTemp[1],
code = itemTemp[12],
dongNm = itemTemp[5],
jibun = itemTemp[11],
conYear = itemTemp[3],
aptNm = itemTemp[6],
area = itemTemp[9],
floor = itemTemp[13])
item[[m]] <- itemTempDt
}
aptBind <- rbindlist(item)
# 응답 내용 저장
regionNm <- subset(loc, code == str_sub(urlList[i], 115, 119))$addr_1  # 지역명
month <- str_sub(urlList[i], 130, 135)
path <- as.character(paste0("C:\\GitHub/R/Exercise/d02_raw_data/", regionNm, "_", month, ".csv"))
write.csv(aptBind, path)
msg = paste0("[", i, "/", length(urlList), "] 수집한 데이터를 [", path, "]에 저장합니다")
cat(msg, "\n\n")
}
setwd("C:/GitHub/R/Exercise")
library(rstudioapi)
library(plyr)
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
#install.packages("stringr")
#install.packages("languageserver")
#install.packages("tm")
install.packages("plyr")
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
#install.packages("stringr")
#install.packages("languageserver")
#install.packages("tm")
#install.packages("plyr")
.libPaths()
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
#install.packages("stringr")
#install.packages("languageserver")
#install.packages("tm")
#install.packages("plyr")
.libPaths()
Sys.getenv("R_LIBS")
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
#install.packages("stringr")
#install.packages("languageserver")
#install.packages("tm")
#install.packages("plyr")
.libPaths()
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
#install.packages("stringr")
#install.packages("languageserver")
#install.packages("tm")
#install.packages("plyr")
.libPaths()
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
#install.packages("stringr")
#install.packages("languageserver")
#install.packages("tm")
#install.packages("plyr")
.libPaths()
Sys.getenv("R_LIBS")
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
#install.packages("stringr")
#install.packages("languageserver")
#install.packages("tm")
#install.packages("plyr")
.libPaths()
.libPaths()
Sys.getenv("R_LIBS")
.libPaths("C:\\Program Files/R/R-4.2.1/library")
Sys.getenv("R_LIBS")
.libPaths()
#[1] "C:/Users/jiyul/AppData/Local/R/win-library/4.2" "C:/Program Files/R/R-4.2.1/library"
install.packages("plyr")
.libPaths("C:\\Program Files/R/R-4.2.1/library")
Sys.getenv("R_LIBS")
.libPaths()
#[1] "C:/Users/jiyul/AppData/Local/R/win-library/4.2" "C:/Program Files/R/R-4.2.1/library"
install.packages("plyr")
#[1] "C:/Users/jiyul/AppData/Local/R/win-library/4.2" "C:/Program Files/R/R-4.2.1/library"
install.packages("plyr")
install.packages("plyr")
library(rstudioapi)
library(plyr)
.libPaths("C:\\Program Files/R/R-4.2.1/library")
Sys.getenv("R_LIBS")
.libPaths()
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("Rtools42")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
library(rstudioapi)
library(plyr)
install.packages("plyr")
.libPaths("C:\\Program Files/R/R-4.2.1/library")
Sys.getenv("R_LIBS")
.libPaths()
install.packages("plyr")
library(rstudioapi)
library(plyr)
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # 작업폴더 설정
getwd()   # 확인
files = dir("./02_raw_data")
# 결합
apt_price = ldply(as.list(paste0("./02_raw_data/", files)), read.csv)
library(rstudioapi)
library(plyr)
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # 작업폴더 설정
getwd()   # 확인
files = dir("./02_raw_data")
# 결합
apt_price = ldply(as.list(paste0("./d02_raw_data/", files)), read.csv)
library(rstudioapi)
library(plyr)
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # 작업폴더 설정
getwd()   # 확인
files = dir("./d02_raw_data")
# 결합
apt_price = ldply(as.list(paste0("./d02_raw_data/", files)), read.csv)
apt_price
clear
cls
clear
cls
cls
clear
clear output
clear all
clear all output
rm(list = ls())
ls
consloe.clear()
console.clear()
console.clear
clear console
library(rstudioapi)
library(plyr)
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # 작업폴더 설정
getwd()   # 확인
files = dir("./d02_raw_data")
files
paste0("./d02_raw_data/", files)
# 결합
apt_price = llply(as.list(paste0("./d02_raw_data/", files)), read.csv)
apt_price
# 결합
apt_price = ldply(as.list(paste0("./d02_raw_data/", files)), read.csv)
apt_price
head(apt_price,5)
tail(apt_price,5)
head(files,5)
dir.create("./d03_integrated")
save(apt_price, file="./d03_integrated/03_apt_price.rdata")
write.csv(apt_price, "./d03_integrated/03_apt_price.csv")
as.list(paste0("./d02_raw_data/", files))
library(rstudioapi)
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # 작업폴더 설정
getwd()   # 확인
# 파일로드
load("./d03_integrated/03_apt_price.rdata")
head(apt_price,5)
# 02.결측값과 공백 제거하기
# 결측값 확인
table(is.na(apt_price))
# 결측값 제거
apt_price = na.omit(apt_price)
# 02.결측값과 공백 제거하기
# 결측값 확인(na: not available), TRUE가 결측값
table(is.na(apt_price))
head(apt_price$price, 5)
library(stringr)
# 데이터프레임 전체에 공백제거 apply 두번째 파라미터 (1: 행, 2:열)
apt_price = as.data.frame(apply(apt_price, 2, str_trim))
head(apt_price$price, 5)
head(apt_price,5)
class(apt_price)
class(apt_price$year)
class(apt_price[[]])
class(apt_price[[:]])
class(apt_price[])
class(apt_price[*])
class(apt_price[[1]])
class(apt_price[[1][2]])
class(apt_price[[1]][[2]])
class(apt_price[[1]])
head(apt_price,5)
# 매매 연월일, 연월 데이터 만들기
library(lubridate)
install.packages("lubridate")
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
#install.packages("stringr")
#install.packages("languageserver")
#install.packages("tm")
#lib 설치시 주의사항
#1. Rstudio를 관리자권한으로 실행
#2. 매번 아래 명령어 해줘야 아래에 설치
.libPaths("C:\\Program Files/R/R-4.2.1/library")
install.packages("lubridate")
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
#install.packages("stringr")
#install.packages("languageserver")
#install.packages("tm")
#lib 설치시 주의사항
#1. Rstudio를 관리자권한으로 실행
#2. 매번 아래 명령어 해줘야 아래에 설치
.libPaths("C:\\Program Files/R/R-4.2.1/library")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
#install.packages("stringr")
#install.packages("languageserver")
#install.packages("tm")
#lib 설치시 주의사항
#1. Rstudio를 관리자권한으로 실행
#2. 매번 아래 명령어 해줘야 아래에 설치
.libPaths("C:\\Program Files/R/R-4.2.1/library")
install.packages("dplyr")
.libPaths("C:\\Program Files/R/R-4.2.1/library")
install.packages("dplyr")
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
install.packages("Rtools")
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
install.packages("Rtools422")
apt_price = apt_price %>% mutate(ymd=make_date(year, month, day))
apt_price <-  apt_price %>% mutate(ymd=make_date(year, month, day))
apt_price = apt_price | mutate(ymd=make_date(year, month, day))
apt_price = apt_price > mutate(ymd=make_date(year, month, day))
apt_price = apt_price > mutate(ymd=make_date(year, month, day))
library(rstudioapi)
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # 작업폴더 설정
getwd()   # 확인
# 01.파일로드
load("./d03_integrated/03_apt_price.rdata")
head(apt_price,5)
# 02.결측값과 공백 제거하기
# 결측값 확인(na: not available), TRUE가 결측값
table(is.na(apt_price))
# 결측값 제거
apt_price = na.omit(apt_price)
# 앞뒤 공백제거
head(apt_price$price, 5)
library(stringr)
library(stringr)
# 데이터프레임 전체에 공백제거 apply 두번째 파라미터 (1: 행, 2:열)
apt_price = as.data.frame(apply(apt_price, 2, str_trim))
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
#install.packages("stringr")
#install.packages("languageserver")
#install.packages("tm")
#lib 설치시 주의사항
#1. Rstudio를 관리자권한으로 실행
#2. 매번 아래 명령어 해줘야 아래에 설치
.libPaths("C:\\Program Files/R/R-4.2.1/library")
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
install.packages("stringr")
library(stringr)
apt_price = as.data.frame(apply(apt_price, 2, str_trim))
head(apt_price$price, 5)
class(apt_price[[1]])
library(lubridate)
library(dplyr)
apt_price = apt_price > mutate(ymd=make_date(year, month, day))
apt_price = apt_price %>% mutate(ymd=make_date(year, month, day))
head(apt_price,5)
apt_price$ym = floor_date(apt_price$ymd, "month")
head(apt_price, 5)
apt_test = apt_price
apt_test$ymdt = mutate(apt_price, ymd=make_date(year, month, day))
head(apt_test,5)
library(rstudioapi)
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # 작업폴더 설정
getwd()   # 확인
# 01.파일로드
load("./d03_integrated/03_apt_price.rdata")
head(apt_price,5)
# 02.결측값과 공백 제거하기
# 결측값 확인(na: not available), TRUE가 결측값
table(is.na(apt_price))
# 결측값 제거
apt_price = na.omit(apt_price)
# 앞뒤 공백제거
head(apt_price$price, 5)
library(stringr)
# 데이터프레임 전체에 공백제거 apply 두번째 파라미터 (1: 행, 2:열)
apt_price = as.data.frame(apply(apt_price, 2, str_trim))
head(apt_price$price, 5)
class(apt_price[[1]])
# 매매 연월일, 연월 데이터 만들어서 맨 뒤에 덧붙이기
library(lubridate)
library(dplyr)
# apt_price = apt_price %>% mutate(ymd=make_date(year, month, day))
apt_price$ymd = mutate(apt_price, ymd=make_date(year, month, day))
head(apt_price, 5)
library(rstudioapi)
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # 작업폴더 설정
getwd()   # 확인
# 01.파일로드
load("./d03_integrated/03_apt_price.rdata")
head(apt_price,5)
# 02.결측값과 공백 제거하기
# 결측값 확인(na: not available), TRUE가 결측값
table(is.na(apt_price))
# 결측값 제거
apt_price = na.omit(apt_price)
# 앞뒤 공백제거
head(apt_price$price, 5)
library(stringr)
# 데이터프레임 전체에 공백제거 apply 두번째 파라미터 (1: 행, 2:열)
apt_price = as.data.frame(apply(apt_price, 2, str_trim))
head(apt_price$price, 5)
class(apt_price[[1]])
# 매매 연월일, 연월 데이터 만들어서 맨 뒤에 덧붙이기
library(lubridate)
library(dplyr)
# apt_price = apt_price %>% mutate(ymd=make_date(year, month, day))
mutate(apt_price, ymd=make_date(year, month, day))
head(apt_price, 5)
library(rstudioapi)
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # 작업폴더 설정
getwd()   # 확인
# 01.파일로드
load("./d03_integrated/03_apt_price.rdata")
head(apt_price,5)
# 02.결측값과 공백 제거하기
# 결측값 확인(na: not available), TRUE가 결측값
table(is.na(apt_price))
# 결측값 제거
apt_price = na.omit(apt_price)
# 앞뒤 공백제거
head(apt_price$price, 5)
library(stringr)
# 데이터프레임 전체에 공백제거 apply 두번째 파라미터 (1: 행, 2:열)
apt_price = as.data.frame(apply(apt_price, 2, str_trim))
head(apt_price$price, 5)
class(apt_price[[1]])
# 매매 연월일, 연월 데이터 만들어서 맨 뒤에 덧붙이기
library(lubridate)
library(dplyr)
# apt_price = apt_price %>% mutate(ymd=make_date(year, month, day))
apt_price = mutate(apt_price, ymd=make_date(year, month, day))
head(apt_price, 5)
apt_price$ym = floor_date(apt_price$ymd, "month")
head(apt_price, 5)
library(rstudioapi)
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # 작업폴더 설정
getwd()   # 확인
# 01.파일로드
load("./d03_integrated/03_apt_price.rdata")
head(apt_price,5)
# 02.결측값과 공백 제거하기
# 결측값 확인(na: not available), TRUE가 결측값
table(is.na(apt_price))
# 결측값 제거
apt_price = na.omit(apt_price)
# 앞뒤 공백제거
head(apt_price$price, 5)
library(stringr)
# 데이터프레임 전체에 공백제거 apply 두번째 파라미터 (1: 행, 2:열)
apt_price = as.data.frame(apply(apt_price, 2, str_trim))
head(apt_price$price, 5)
class(apt_price[[1]])
# 매매 연월일, 연월 데이터 만들어서 맨 뒤에 덧붙이기
library(lubridate)
library(dplyr)
# 아래 2가지 방법 모두 동일 결과
# apt_price = apt_price %>% mutate(ymd=make_date(year, month, day))
apt_price = mutate(apt_price, ymd=make_date(year, month, day))
apt_price$ym = floor_date(apt_price$ymd, "month")
head(apt_price, 5)
# 매매가 변환 (문자 --> 숫자)
apt_price$price = sub(apt_price, ",", "",.) %>% as.numeric()
# 매매가 변환 (문자 --> 숫자)
# apt_price$price = sub(apt_price, ",", "",.) %>% as.numeric()
apt_price$price = sub(apt_price$price, ",", "",.) %>% as.numeric()
# 매매가 변환 (문자 --> 숫자)
# apt_price$price = sub(apt_price, ",", "",.) %>% as.numeric()
apt_price$price = apt_price$price %>% sub(",", "",.) %>% as.numeric()
price ="30"
price ="30,000"
price
sub(price, ",", "")
price
sub(",", "", price)
price
head(apt_price, 5)
library(rstudioapi)
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # 작업폴더 설정
getwd()   # 확인
# 01.파일로드
load("./d03_integrated/03_apt_price.rdata")
head(apt_price,5)
# 02.결측값과 공백 제거하기
# 결측값 확인(na: not available), TRUE가 결측값
table(is.na(apt_price))
# 결측값 제거
apt_price = na.omit(apt_price)
# 앞뒤 공백제거
head(apt_price$price, 5)
library(stringr)
# 데이터프레임 전체에 공백제거 apply 두번째 파라미터 (1: 행, 2:열)
apt_price = as.data.frame(apply(apt_price, 2, str_trim))
head(apt_price$price, 5)
class(apt_price[[1]])
# 매매 연월일, 연월 데이터 만들어서 맨 뒤에 덧붙이기
library(lubridate)
library(dplyr)
# 아래 2가지 방법 모두 동일 결과
# apt_price = apt_price %>% mutate(ymd=make_date(year, month, day))
apt_price = mutate(apt_price, ymd=make_date(year, month, day))
apt_price$ym = floor_date(apt_price$ymd, "month")
head(apt_price, 5)
# 매매가 변환 (문자 --> 숫자)
apt_price$price = sub(",", "", apt_price$price) %>% as.numeric()
# 매매가 변환 (문자 --> 숫자)
apt_price$price = sub(",", "", apt_price$price) %>% as.numeric()
head(apt_price$price, 5)
as.numeric(sub(",", "", apt_price$price))
# 아파트 이름 현황
head(apt_price$aptNm, 5)
# 아파트 이름 현황
head(apt_price$aptNm)
# 아파트 이름 현황
head(apt_price$aptNm, 30)
# 아파트 이름에서 괄호 이후 삭제
gsub("\\(.*", "", apt_price$aptNm)
# 아파트 이름에서 괄호 이후 삭제 : 괄호인식문제로 \\ 붙임
apt_price$aptNm = gsub("\\(.*", "", apt_price$aptNm)
# 아파트 이름 현황
head(apt_price$aptNm, 30)
# 주소 조합
# 지역코드 불러오기
loc = read.csv("./d01_code/sigun_code/sigun_code.csv", fileEncoding = "UTF-8")
# 지역명 결합하기
apt_price = merge(apt_price, loc, by ='code')
# 주소 조합
apt_price$jusoJibun = paste0(apt_price$addr_2, " ", apt_price$dongNm, " ", apt_price$jibun, " ", apt_price$aptNm)
head(apt_price, 5)
.libPaths("C:\\Program Files/R/R-4.2.1/library")
# install.packages("rstudioapi")
# install.packages("XML")
# install.packages("data.table")
#install.packages("Rtools42")
# install.packages("stringr")
#install.packages("languageserver")
#install.packages("tm")
#lib 설치시 주의사항
#1. Rstudio를 관리자권한으로 실행
#2. 매번 아래 명령어 해줘야 아래에 설치
.libPaths("C:\\Program Files/R/R-4.2.1/library")
install.packages(c("boot", "class", "cluster", "fansi", "foreign", "lubridate", "MASS", "Matrix", "mgcv", "nlme", "nnet", "Rcpp", "rpart", "spatial", "survival", "vctrs"))
